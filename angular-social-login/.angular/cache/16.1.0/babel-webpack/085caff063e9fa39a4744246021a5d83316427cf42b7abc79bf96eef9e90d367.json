{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConstants } from '../common/app.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AuthService {\n  constructor(http) {\n    this.http = http;\n  }\n  login(credentials) {\n    return this.http.post(AppConstants.AUTH_API + 'signin', {\n      email: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n  register(user) {\n    return this.http.post(AppConstants.AUTH_API + 'signup', {\n      displayName: user.displayName,\n      email: user.email,\n      password: user.password,\n      matchingPassword: user.matchingPassword,\n      socialProvider: 'LOCAL'\n    }, httpOptions);\n  }\n}\nAuthService.ɵfac = function AuthService_Factory(t) {\n  return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient));\n};\nAuthService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthService,\n  factory: AuthService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AppConstants","httpOptions","headers","AuthService","constructor","http","login","credentials","post","AUTH_API","email","username","password","register","user","displayName","matchingPassword","socialProvider","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\TEST1\\angular-social-login\\src\\app\\_services\\auth.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AppConstants } from '../common/app.constants';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n  constructor(private http: HttpClient) { }\n\n  login(credentials): Observable<any> {\n    return this.http.post(AppConstants.AUTH_API + 'signin', {\n      email: credentials.username,\n      password: credentials.password\n    }, httpOptions);\n  }\n\n  register(user): Observable<any> {\n    return this.http.post(AppConstants.AUTH_API + 'signup', {\n      displayName: user.displayName,\n      email: user.email,\n      password: user.password,\n      matchingPassword: user.matchingPassword,\n      socialProvider: 'LOCAL'\n    }, httpOptions);\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,YAAY,QAAQ,yBAAyB;;;AAEtD,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOI,WAAW;EACtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,KAAKA,CAACC,WAAW;IACf,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAACR,YAAY,CAACS,QAAQ,GAAG,QAAQ,EAAE;MACtDC,KAAK,EAAEH,WAAW,CAACI,QAAQ;MAC3BC,QAAQ,EAAEL,WAAW,CAACK;KACvB,EAAEX,WAAW,CAAC;EACjB;EAEAY,QAAQA,CAACC,IAAI;IACX,OAAO,IAAI,CAACT,IAAI,CAACG,IAAI,CAACR,YAAY,CAACS,QAAQ,GAAG,QAAQ,EAAE;MACtDM,WAAW,EAAED,IAAI,CAACC,WAAW;MAC7BL,KAAK,EAAEI,IAAI,CAACJ,KAAK;MACjBE,QAAQ,EAAEE,IAAI,CAACF,QAAQ;MACvBI,gBAAgB,EAAEF,IAAI,CAACE,gBAAgB;MACvCC,cAAc,EAAE;KACjB,EAAEhB,WAAW,CAAC;EACjB;;AAlBWE,WAAW,C;mBAAXA,WAAW,EAAAe,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXlB,WAAW,C;SAAXA,WAAW;EAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}