{"ast":null,"code":"import * as i0 from \"@angular/core\";\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\nexport class TokenStorageService {\n  constructor() {}\n  signOut() {\n    window.sessionStorage.clear();\n  }\n  saveToken(token) {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n  getToken() {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n  saveUser(user) {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n  getUser() {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\nTokenStorageService.ɵfac = function TokenStorageService_Factory(t) {\n  return new (t || TokenStorageService)();\n};\nTokenStorageService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenStorageService,\n  factory: TokenStorageService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["TOKEN_KEY","USER_KEY","TokenStorageService","constructor","signOut","window","sessionStorage","clear","saveToken","token","removeItem","setItem","getToken","getItem","saveUser","user","JSON","stringify","getUser","parse","factory","ɵfac","providedIn"],"sources":["F:\\spring-boot-angular-oauth2-social-login-demo-main\\angular-11-social-login\\src\\app\\_services\\token-storage.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\nconst TOKEN_KEY = 'auth-token';\nconst USER_KEY = 'auth-user';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenStorageService {\n\n  constructor() { }\n\n  signOut(): void {\n    window.sessionStorage.clear();\n  }\n\n  public saveToken(token: string): void {\n    window.sessionStorage.removeItem(TOKEN_KEY);\n    window.sessionStorage.setItem(TOKEN_KEY, token);\n  }\n\n  public getToken(): string {\n    return sessionStorage.getItem(TOKEN_KEY);\n  }\n\n  public saveUser(user): void {\n    window.sessionStorage.removeItem(USER_KEY);\n    window.sessionStorage.setItem(USER_KEY, JSON.stringify(user));\n  }\n\n  public getUser(): any {\n    return JSON.parse(sessionStorage.getItem(USER_KEY));\n  }\n}\n"],"mappings":";AAEA,MAAMA,SAAS,GAAG,YAAY;AAC9B,MAAMC,QAAQ,GAAG,WAAW;AAK5B,OAAM,MAAOC,mBAAmB;EAE9BC,YAAA,GAAgB;EAEhBC,OAAOA,CAAA;IACLC,MAAM,CAACC,cAAc,CAACC,KAAK,EAAE;EAC/B;EAEOC,SAASA,CAACC,KAAa;IAC5BJ,MAAM,CAACC,cAAc,CAACI,UAAU,CAACV,SAAS,CAAC;IAC3CK,MAAM,CAACC,cAAc,CAACK,OAAO,CAACX,SAAS,EAAES,KAAK,CAAC;EACjD;EAEOG,QAAQA,CAAA;IACb,OAAON,cAAc,CAACO,OAAO,CAACb,SAAS,CAAC;EAC1C;EAEOc,QAAQA,CAACC,IAAI;IAClBV,MAAM,CAACC,cAAc,CAACI,UAAU,CAACT,QAAQ,CAAC;IAC1CI,MAAM,CAACC,cAAc,CAACK,OAAO,CAACV,QAAQ,EAAEe,IAAI,CAACC,SAAS,CAACF,IAAI,CAAC,CAAC;EAC/D;EAEOG,OAAOA,CAAA;IACZ,OAAOF,IAAI,CAACG,KAAK,CAACb,cAAc,CAACO,OAAO,CAACZ,QAAQ,CAAC,CAAC;EACrD;;AAxBWC,mBAAmB,C;mBAAnBA,mBAAmB;AAAA;AAAnBA,mBAAmB,C;SAAnBA,mBAAmB;EAAAkB,OAAA,EAAnBlB,mBAAmB,CAAAmB,IAAA;EAAAC,UAAA,EAFlB;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}