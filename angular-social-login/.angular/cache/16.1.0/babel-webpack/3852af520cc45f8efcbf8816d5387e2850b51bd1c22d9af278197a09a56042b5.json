{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { AppConstants } from '../common/app.constants';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPublicContent() {\n    return this.http.get(AppConstants.API_URL + 'all', {\n      responseType: 'text'\n    });\n  }\n  getUserBoard() {\n    return this.http.get(AppConstants.API_URL + 'user', {\n      responseType: 'text'\n    });\n  }\n  getModeratorBoard() {\n    return this.http.get(AppConstants.API_URL + 'mod', {\n      responseType: 'text'\n    });\n  }\n  getAdminBoard() {\n    return this.http.get(AppConstants.API_URL + 'admin', {\n      responseType: 'text'\n    });\n  }\n  getCurrentUser() {\n    return this.http.get(AppConstants.API_URL + 'user/me', httpOptions);\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["HttpHeaders","AppConstants","httpOptions","headers","UserService","constructor","http","getPublicContent","get","API_URL","responseType","getUserBoard","getModeratorBoard","getAdminBoard","getCurrentUser","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["F:\\TEST1\\angular-social-login\\src\\app\\_services\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { AppConstants } from '../common/app.constants';\n\nconst httpOptions = {\n\t\t  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n\t\t};\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getPublicContent(): Observable<any> {\n    return this.http.get(AppConstants.API_URL + 'all', { responseType: 'text' });\n  }\n\n  getUserBoard(): Observable<any> {\n    return this.http.get(AppConstants.API_URL + 'user', { responseType: 'text' });\n  }\n\n  getModeratorBoard(): Observable<any> {\n    return this.http.get(AppConstants.API_URL + 'mod', { responseType: 'text' });\n  }\n\n  getAdminBoard(): Observable<any> {\n    return this.http.get(AppConstants.API_URL + 'admin', { responseType: 'text' });\n  }\n\n  getCurrentUser(): Observable<any> {\n    return this.http.get(AppConstants.API_URL + 'user/me', httpOptions);\n  }\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAASC,YAAY,QAAQ,yBAAyB;;;AAEtD,MAAMC,WAAW,GAAG;EAChBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAMH,OAAM,MAAOI,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAACP,YAAY,CAACQ,OAAO,GAAG,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC;EAC9E;EAEAC,YAAYA,CAAA;IACV,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAACP,YAAY,CAACQ,OAAO,GAAG,MAAM,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC;EAC/E;EAEAE,iBAAiBA,CAAA;IACf,OAAO,IAAI,CAACN,IAAI,CAACE,GAAG,CAACP,YAAY,CAACQ,OAAO,GAAG,KAAK,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC;EAC9E;EAEAG,aAAaA,CAAA;IACX,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAACP,YAAY,CAACQ,OAAO,GAAG,OAAO,EAAE;MAAEC,YAAY,EAAE;IAAM,CAAE,CAAC;EAChF;EAEAI,cAAcA,CAAA;IACZ,OAAO,IAAI,CAACR,IAAI,CAACE,GAAG,CAACP,YAAY,CAACQ,OAAO,GAAG,SAAS,EAAEP,WAAW,CAAC;EACrE;;AAtBWE,WAAW,C;mBAAXA,WAAW,EAAAW,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAXd,WAAW,C;SAAXA,WAAW;EAAAe,OAAA,EAAXf,WAAW,CAAAgB,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}